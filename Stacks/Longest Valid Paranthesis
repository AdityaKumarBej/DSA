Longest Valid Parentheses
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

Example 1:

Input: "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()"
Example 2:

Input: ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()"


class Solution {
    public int longestValidParentheses(String s) 
    {
      Stack<Integer> stack = new Stack<Integer>();
      
      stack.push(-1); //To check if the next element is not closing , else it will pop an empty stack
      int r = 0;
      for(int i = 0 ; i < s.length() ; i++)
      {
        if(s.charAt(i) == '('
          {
            stack.push(i);
          }
         else
          {
            stack.pop();
            
            if(!stack.isEmpty())
              {
                r = Math.max(r,i-stack.peek());
              }
            else
              {
                stack.push(i);
              }
           }
        }
        
        return result;    
    
    }
    
}
