Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]



METHOD 1 : USING SORT O(n^2)


 class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        
        int left , right;
        int target = 0;
        List<List<Integer>> list = new LinkedList<>();
        
        if(nums.length<3)
        	return list;
        Arrays.sort(nums);
        
        for(int i = 0 ; i <= nums.length-2 ;i++)
        {
            left = i+1;
            right = nums.length-1;
            
            if(i > 0 && nums[i] == nums[i-1])continue;
            
            while(left < right)
            {
                if(nums[i] + nums[left] + nums[right] == target)
                {
                    list.add(Arrays.asList(nums[i] , nums[left] , nums[right]));
                    while(left < right && nums[left] == nums[left+1])left++;
                    while(left < right && nums[right] == nums[right-1])right--;                                     
                     left++;
                     right--;
                }
                else if(nums[i] + nums[left] + nums[right] > target)
                {
                    right--;
                }
                else if(nums[i] + nums[left] + nums[right] < target)
                {
                    left++;
                }      
            }  
           
        }
        
        return list;
    }
}
