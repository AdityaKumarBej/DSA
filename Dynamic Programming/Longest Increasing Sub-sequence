Given an unsorted array of integers, find the length of longest increasing subsequence.

Example:

Input: [10,9,2,5,3,7,101,18]
Output: 4 
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. 
Note:

There may be more than one LIS combination, it is only necessary for you to return the length.
Your algorithm should run in O(n2) complexity.

public static void main(String[] args)
{
int [] nums = {10,9,2,5,3,7,101,18};

int[] new_arr = new int[nums.length];
Arrays.fill(new_arr , 1);

int maxSoFar = 1;

for(int i = 1 ; i < nums.length ; i++)
{
    for(int j = 0 ; j < i ; j++)
    {
        if(nums[i] > nums[j])
        {
            new_arr[i] = Math.max(nums[i] , nums[j]+1);
        }
    }
    maxSoFar = Math.max(maxSoFar , new_arr[i]);
}
System.out.println(maxSoFar);

}
