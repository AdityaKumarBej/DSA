Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) 
    {
     
        if(root == null)
        {
            return 0;
        }
        Queue<TreeNode> q = new ArrayDeque<>();
        
        q.add(root);
        int count = 0;
        
        while(!q.isEmpty())
        {
            TreeNode curr = q.poll();
          
            if(curr.left != null)
            {
                q.add(curr.left);
                 if(curr.left.right == null && curr.left.left == null)
                {
                    count += curr.left.val;
                }
            }
            if(curr.right!= null)
            {
                q.add(curr.right);
            }
            
           
        }
        return count;
  
    }
}
