class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) 
    {
        
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        if(root == null)
        {
            return list;
        }
        
        Queue<TreeNode> q = new LinkedList<>();
        
        q.add(root);
        Stack<Integer> s = new Stack<>();
        while(!q.isEmpty())
        {
            int size = q.size();
            ArrayList<Integer> temp = new ArrayList<>();
            for(int i = 0 ; i < size ; i++)
            {
                root = q.poll();
                temp.add(root.val);
                s.push(root.val);
                if(root.right != null)q.add(root.right);
                if(root.left != null)q.add(root.left);
               
            }
            list.add(temp);
        }
      
        while(!s.isEmpty())
        {
            System.out.println(s.pop());
        }
        return list;
        
    }
}
