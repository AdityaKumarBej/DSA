Given n, how many structurally unique BST's (binary search trees) that store values 1 ... n?

Example:

Input: 3
Output: 5
Explanation:
Given n = 3, there are a total of 5 unique BST's:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
   
METHOD 1 : USING CATLAN NUMBERS
Cn = 1  (2n/n)
    ---
    n+1
    
    
TIME COMPLEXITY - O(N^2)

class Solution {
    public int numTrees(int n) {
        
        int total = 0;
        if(n == 0 || n == 1)
        {
            return 1;
        }
        for(int i = 1 ; i <= n ; i++)
        {
            total += numTrees(i-1) * numTrees(n-i);
        }
        
    return total;
    
    }
}
